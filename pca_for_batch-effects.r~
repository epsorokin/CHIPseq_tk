###------------------###--------------------######------------------###--------------------#### # # FIRST: Get the peaks for LAG-1 and NICD (Combined) and the read counts for    # # # all replicates and all experiments, including inputs# # # -bash-4.1$ cd /groups/Kimble/ElenaSorokin/AllANALYZEDIllumina/ERIKA/pca# # # -bash-4.1$ R#### PART ONE: SETUP options(digits=3)library(DESeq)design <- read.delim("design.txt",header=T, row.names=1)design# WE'll first try to look at everything smalldesign<- design[,c(1,5)smalldesigncds <- newCountDataSet(counts,design)cds <- estimateSizeFactors ( cds ) cds <- estimateDispersions( cds ,method="blind",fitType="local")vdsFull <- varianceStabilizingTransformation(cds)pdf ("test.pdf")print(plotPCA(vdsFull, intgroup=c("condition","partial_identity")))dev.off()# This yields an incomprehensible plot b/c ran out of colors# So I changed the plotPCA function to include ASCII characters> fix(plot2)# function (x, intgroup = "condition", ntop = 500)# {    # rv = rowVars(exprs(x))    # select = order(rv, decreasing = TRUE)[seq_len(ntop)]    # pca = prcomp(t(exprs(x)[select, ]))    # fac = factor(apply(pData(x)[, intgroup, drop = FALSE], 1,        # paste, collapse = " : "))    # if (length(fac) >= 3)        # colours = brewer.pal(nlevels(fac), "Paired")    # else colours = c("green", "blue")    # if (length(fac) >=3)        # points = c(32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59)    # else points = 16    # xyplot(PC2 ~ PC1, groups = fac, data = as.data.frame(pca$x),        # pch = list(points), cex = 2, aspect = "iso", col = colours, main = draw.key(key = list(rect = list(col = colours),            # # # text = list(levels(fac)), rep = FALSE)))# # ESCAPE then :wqpdf("test2.pdf")print(plot2(vdsFull, intgroup=c("condition","partial_identity")))dev.off()plot3 <- plotPCAfix(plot3)# function (x, intgroup = "condition", ntop = 500)# {    # rv = rowVars(exprs(x))    # select = order(rv, decreasing = TRUE)[seq_len(ntop)]    # pca = prcomp(t(exprs(x)[select, ]))    # fac = factor(apply(pData(x)[, intgroup, drop = FALSE], 1,        # paste, collapse = " : "))    # if (length(fac) >= 3)        # colours = colorRampPalette(brewer.pal(4,"BuPu"))(nlevels(fac))    # else colours = c("green", "blue")    # xyplot(PC2 ~ PC1, groups = fac, data = as.data.frame(pca$x),        # pch = 16, cex = 2, aspect = "iso", col = colours, main = draw.key(key = list(rect = list(col = colours),            # text = list(levels(fac)), rep = FALSE)))# }pdf("test3.pdf")print(plot3(vdsFull, intgroup=c("condition","partial_identity")))dev.off()## THIS PLOT3 WORKS!!! Ongoing issues:1) Circles show up as funny boxes in Illustrator2) ColorsSolutions- Problem 1 should be fixed by going to a newer version of Illustrator And Problem 2 should be fixed by using a broader palette of colors::plot3 <- plotPCAfix(plot3)function (x, intgroup = "condition", ntop = 500){    rv = rowVars(exprs(x))    select = order(rv, decreasing = TRUE)[seq_len(ntop)]    pca = prcomp(t(exprs(x)[select, ]))    fac = factor(apply(pData(x)[, intgroup, drop = FALSE], 1,        paste, collapse = " : "))    if (length(fac) >= 3)        colours = colorRampPalette(brewer.pal(8,"Dark2"))(nlevels(fac))    else colours = c("green", "blue")    xyplot(PC2 ~ PC1, groups = fac, data = as.data.frame(pca$x),        pch = 16, cex = 2, aspect = "iso", col = colours, main = draw.key(key = list(rect = list(col = colours),            text = list(levels(fac)), rep = FALSE)))}			# Test 4 and 5 has an even better palette especially Set1 (test 5):> fix(plot3)function (x, intgroup = "condition", ntop = 500){    rv = rowVars(exprs(x))    select = order(rv, decreasing = TRUE)[seq_len(ntop)]    pca = prcomp(t(exprs(x)[select, ]))    fac = factor(apply(pData(x)[, intgroup, drop = FALSE], 1,        paste, collapse = " : "))    if (length(fac) >= 3)        colours = colorRampPalette(brewer.pal(8,"Set1"))(nlevels(fac))    else colours = c("green", "blue")    xyplot(PC2 ~ PC1, groups = fac, data = as.data.frame(pca$x),        pch = 16, cex = 2, aspect = "iso", col = colours, main = draw.key(key = list(rect = list(col = colours),            text = list(levels(fac)), rep = FALSE)))}pdf("test4.pdf")print(plot3(vdsFull, intgroup=c("condition","partial_identity")))dev.off()dev.off()fix(plot3)pdf("test5.pdf")print(plot3(vdsFull, intgroup=c("condition","partial_identity")))dev.off()history()# You could also play with the number of data points... The default is 500 but you could use ALL peaks as data points too or else just the top peaks. #################################################}}}<>># To get the PC1 and PC2 values: > summary(princomp(counts))Importance of components:                             Comp.1       Comp.2       Comp.3       Comp.4Standard deviation     2538.8994024 2168.4088478 665.15931015 496.12825644Proportion of Variance    0.5356995    0.3907622   0.03676898   0.02045588Cumulative Proportion     0.5356995    0.9264618   0.96323073   0.98368661                             Comp.5       Comp.6       Comp.7       Comp.8Standard deviation     2.669323e+02 203.30923733 1.673083e+02 1.269751e+02Proportion of Variance 5.921511e-03   0.00343514 2.326297e-03 1.339885e-03Cumulative Proportion  9.896081e-01   0.99304326 9.953696e-01 9.967094e-01                             Comp.9      Comp.10      Comp.11      Comp.12Standard deviation     1.003411e+02 8.652943e+01 6.966380e+01 6.386295e+01Proportion of Variance 8.367358e-04 6.222401e-04 4.033152e-04 3.389442e-04Cumulative Proportion  9.975462e-01 9.981684e-01 9.985717e-01 9.989107e-01                            Comp.13      Comp.14      Comp.15      Comp.16Standard deviation     5.415965e+01 4.588838e+01 4.175974e+01 3.713617e+01Proportion of Variance 2.437709e-04 1.749991e-04 1.449258e-04 1.146105e-04Cumulative Proportion  9.991545e-01 9.993295e-01 9.994744e-01 9.995890e-01                            Comp.17      Comp.18      Comp.19      Comp.20Standard deviation     3.130516e+01 2.749028e+01 2.694340e+01 2.336933e+01Proportion of Variance 8.144454e-05 6.280419e-05 6.033024e-05 4.538608e-05Cumulative Proportion  9.996704e-01 9.997332e-01 9.997936e-01 9.998390e-01                            Comp.21      Comp.22      Comp.23      Comp.24Standard deviation     2.100188e+01 1.856759e+01 1.613270e+01 1.508731e+01Proportion of Variance 3.665612e-05 2.865109e-05 2.162941e-05 1.891708e-05Cumulative Proportion  9.998756e-01 9.999043e-01 9.999259e-01 9.999448e-01                            Comp.25      Comp.26      Comp.27      Comp.28Standard deviation     1.449159e+01 1.381834e+01 1.256169e+01 1.026619e+01Proportion of Variance 1.745269e-05 1.586872e-05 1.311373e-05 8.758888e-06Cumulative Proportion  9.999623e-01 9.999781e-01 9.999912e-01 1.000000e+00